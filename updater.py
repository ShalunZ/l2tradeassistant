# updater.py
import os
import sys
import requests
import shutil
from config import DB_PATH
from utils.logger import debug_log
from utils.sound import play_notification_sound, play_error_sound
from core.handler import restart_program


# ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
DB_DOWNLOAD_URL = "https://github.com/ShalunZ/l2tradeassistant/releases/download/v1.0/l2trade.db"

def get_remote_db_size():
    """–ü–æ–ª—É—á–∞–µ—Ç —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –±–∞–∑—ã –Ω–∞ GitHub"""
    try:
        response = requests.head(DB_DOWNLOAD_URL, timeout=10, allow_redirects=True)
        response.raise_for_status()
        return int(response.headers.get('content-length', 0))
    except Exception as e:
        debug_log(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä —É–¥–∞–ª—ë–Ω–Ω–æ–π –±–∞–∑—ã: {e}")
        return None

def get_local_db_size():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞–∑–º–µ—Ä –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã"""
    try:
        return os.path.getsize(DB_PATH) if os.path.exists(DB_PATH) else 0
    except Exception as e:
        debug_log(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã: {e}")
        return 0

def download_db():
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –Ω–æ–≤—É—é –±–∞–∑—É –≤ temp-—Ñ–∞–π–ª, –∑–∞—Ç–µ–º –∑–∞–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ä—É—é"""
    temp_path = DB_PATH + ".tmp"
    try:
        debug_log("‚è¨ –ù–∞—á–∏–Ω–∞—é —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        with requests.get(DB_DOWNLOAD_URL, stream=True, timeout=30, allow_redirects=True) as r:
            r.raise_for_status()
            with open(temp_path, 'wb') as f:
                downloaded = 0
                for chunk in r.iter_content(8192):
                    f.write(chunk)
                    downloaded += len(chunk)
                f.flush()  # –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤—Å—ë –∑–∞–ø–∏—Å–∞–Ω–æ
                os.fsync(f.fileno())  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–æ—Å–∏—Ç—å –∫—ç—à –Ω–∞ –¥–∏—Å–∫
                debug_log(f"‚úÖ –°–∫–∞—á–∞–Ω–æ {downloaded:,} –±–∞–π—Ç")

        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –±–∞–∑—É –∏ –∑–∞–º–µ–Ω—è–µ–º
        if os.path.exists(DB_PATH):
            os.remove(DB_PATH)
        os.rename(temp_path, DB_PATH)

        # üîÅ –î–û–ë–ê–í–ò–ú –ü–†–û–í–ï–†–ö–£: —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –Ω–µ –Ω—É–ª–µ–≤–æ–π
        if os.path.exists(DB_PATH) and os.path.getsize(DB_PATH) > 0:
            debug_log("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
            play_notification_sound()
            return True
        else:
            debug_log("‚ùå –§–∞–π–ª –±–∞–∑—ã —Å–æ–∑–¥–∞–Ω, –Ω–æ –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            play_error_sound()
            return False

    except Exception as e:
        debug_log(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –±–∞–∑—ã: {e}")
        if os.path.exists(temp_path):
            os.remove(temp_path)
        play_error_sound()
        return False

def check_and_update():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–∑—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ"""
    debug_log("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")

    local_size = get_local_db_size()

    # –ï—Å–ª–∏ –±–∞–∑–∞ –µ—Å—Ç—å ‚Äî —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä
    if local_size > 0:
        remote_size = get_remote_db_size()  # –û—Å—Ç–æ—Ä–æ–∂–Ω–æ: –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å None
        if remote_size is None:
            debug_log("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä —É–¥–∞–ª—ë–Ω–Ω–æ–π –±–∞–∑—ã. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É.")
        elif local_size == remote_size:
            debug_log("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∞–∫—Ç—É–∞–ª—å–Ω–∞.")
            return False
        else:
            debug_log(f"üîÑ –†–∞–∑–º–µ—Ä –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è: –ª–æ–∫–∞–ª—å–Ω—ã–π={local_size}, —É–¥–∞–ª—ë–Ω–Ω—ã–π={remote_size}")
    else:
        debug_log("üÜï –ë–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–∫–∞—á–∏–≤–∞—é...")

    # –í—Å—ë —Ä–∞–≤–Ω–æ —Å–∫–∞—á–∏–≤–∞–µ–º ‚Äî –µ—Å–ª–∏ –Ω–µ—Ç –±–∞–∑—ã –∏–ª–∏ —Ä–∞–∑–º–µ—Ä –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç
    return download_db()

