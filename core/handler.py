# core/handler.py

import keyboard
from utils.screenshot import take_screenshot
from utils.ocr import extract_text_from_image
from utils.parser import parse_trade_data
from database.db import connect_db, save_to_db, ensure_item_exists
from gui.trade_gui import TradeLoggerGUI
import threading
import tkinter as tk
import sys, os
from utils.sound import *

processing = False
data_for_gui = {}  # –•—Ä–∞–Ω–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Ctrl+F
main_root = None   # –ï–¥–∏–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä Tk()
main_gui = None    # –ì–ª–æ–±–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ GUI

def set_main_app(root, gui):
    global main_root, main_gui
    main_root = root
    main_gui = gui

def on_key_press(e=None):
    global processing, data_for_gui, main_root, main_gui
    if processing:
        return
    processing = True
    print("–ì–æ—Ä—è—á–∞—è –∫–ª–∞–≤–∏—à–∞ Ctrl+E –Ω–∞–∂–∞—Ç–∞!")

    img = take_screenshot()
    text = extract_text_from_image(img)
    print("–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:")
    print(text)

    data = parse_trade_data(text)
    if data["item_id"]:
        print(f"üîç –ù–∞–π–¥–µ–Ω item_id: {data['item_id']}")
        print(f"üìù –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –∏–º—è –ø—Ä–µ–¥–º–µ—Ç–∞: {data.get('item_name', '–ù–µ –Ω–∞–π–¥–µ–Ω–æ')}")
        print(f"üí∞ –¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É: {data['unit_price']}")
        print(f"üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {data['quantity']}")
        print(f"üßÆ –û–±—â–∞—è —Å—É–º–º–∞: {data['total_price']}")

        data_for_gui = data

        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        if not main_root:
            root = tk.Tk()
            root.withdraw()
            gui = TradeLoggerGUI(root)
            set_main_app(root, gui)

        main_gui.show_confirmation_dialog(data)

    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å item_id")
        data_for_gui = {}

    processing = False


def show_deal_info_window(e=None):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Ctrl+F ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ç–æ–≤–∞—Ä—É"""
    global data_for_gui, main_gui, processing
    if processing:
        return
    if not data_for_gui:
        print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
        return

    item_id = data_for_gui.get("item_id")
    if not item_id:
        print("‚ùå –ù–µ—Ç item_id –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
        return

    print(f"üîç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ item_id: {item_id}")

    if main_gui:
        main_gui.show_deal_info(data_for_gui)
    else:
        print("‚ùå GUI –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")

def start_hotkey_listener():
    keyboard.add_hotkey("ctrl+e", on_key_press)
    keyboard.add_hotkey("ctrl+f", show_deal_info_window)
    keyboard.add_hotkey("ctrl+p", restart_program)


def restart_program():
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Ctrl+P."""
    play_loud_sound()
    print("–ì–æ—Ä—è—á–∞—è –∫–ª–∞–≤–∏—à–∞ Ctrl+P –Ω–∞–∂–∞—Ç–∞! –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã...")
    python = sys.executable
    os.execl(python, python, *sys.argv)

    
def show_all_items(e=None):
    gui.show_all_items_list()