# database/db.py
import psycopg2
import sys
from config import DB_CONFIG
from utils.sound import play_error_sound, play_success_sound

# –ü–æ–ø—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å tkinter
try:
    import tkinter as tk
    from tkinter import messagebox
    HAS_TK = True
except ImportError:
    HAS_TK = False


def show_critical_error_and_exit(title, message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –æ–∫–Ω–æ —Å –æ—à–∏–±–∫–æ–π –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."""
    if HAS_TK:
        root = tk.Tk()
        root.withdraw()  # –°–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        messagebox.showerror(title, message)
        root.destroy()
    else:
        print(f"[FATAL] {title}: {message}")
    # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    sys.exit(1)


def connect_db():
    """–°–æ–∑–¥–∞—ë—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å PostgreSQL. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç conn –∏–ª–∏ None."""
    try:
        conn = psycopg2.connect(**DB_CONFIG)
        return conn
    except Exception as e:
        error_msg = f"\n\n‚ùå–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–∞–∑–µ –î–∞–Ω–Ω—ã—Ö:\n\n {e}"
        print(error_msg)
        show_critical_error_and_exit(
            "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –ë–∞–∑–µ –î–∞–Ω–Ω—ã—Ö.\n"
            "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.\n\n"
        )
        return None  # –î–ª—è –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç–∏ (–Ω–µ –¥–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è –∏–∑-–∑–∞ sys.exit)


def test_connection():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –º–æ–¥—É–ª—è."""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    conn = connect_db()  # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ ‚Äî –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –∑–∞–∫—Ä–æ–µ—Ç—Å—è
    if conn is not None:
        conn.close()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ.")


def save_to_db(item_id, unit_price, quantity, total_price, outlet_type, outlet_city, nickname):
    if not item_id:
        print("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω item_id")
        play_error_sound()
        return

    conn = connect_db()  # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ ‚Äî –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫—Ä–æ–µ—Ç—Å—è –∑–¥–µ—Å—å
    if conn is None:
        return  # –î–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ HAS_TK == False, –Ω–æ –ª—É—á—à–µ –ø–µ—Ä–µ—Å—Ç—Ä–∞—Ö–æ–≤–∞—Ç—å—Å—è

    try:
        with conn.cursor() as cur:
            cur.execute("""
                INSERT INTO trade_logs (item_id, unit_price, quantity, total_price, outlet_type, outlet_city, nickname, date_timestamp)
                VALUES (%s, %s, %s, %s, %s, %s, %s, NOW())
            """, (item_id, unit_price, quantity, total_price, outlet_type, outlet_city, nickname))
            conn.commit()
            print(f"‚úÖ –ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: item_id={item_id}, —Ç–∏–ø –ª–∞–≤–∫–∏={outlet_type}, –≥–æ—Ä–æ–¥={outlet_city}, –ø—Ä–æ–¥–∞–≤–µ—Ü={nickname}, –∫–æ–ª-–≤–æ={quantity}, —Ü–µ–Ω–∞ –∑–∞ –µ–¥.={unit_price}")
            play_success_sound()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        play_error_sound()
    finally:
        try:
            conn.close()
        except:
            pass


def ensure_item_exists(item_id, item_name="Unknown"):
    conn = connect_db()
    if conn is None:
        return

    try:
        with conn.cursor() as cur:
            cur.execute("SELECT 1 FROM items WHERE item_id = %s", (item_id,))
            if cur.fetchone():
                print(f"üîÅ –ü—Ä–µ–¥–º–µ—Ç —Å item_id={item_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                return

            cur.execute("""
                INSERT INTO items (item_id, item_name)
                VALUES (%s, %s)
            """, (item_id, item_name))
            conn.commit()
            print(f"üÜï –ü—Ä–µ–¥–º–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω: {item_id} ‚Üí {item_name}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞: {e}")
        play_error_sound()
    finally:
        try:
            conn.close()
        except:
            pass


# üîÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è
if __name__ != "__main__":
    test_connection()