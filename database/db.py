# database/db.py
import sqlite3
import os
import sys
from config import DB_PATH
from utils.sound import play_error_sound, play_success_sound

# –ü–æ–ø—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å tkinter
try:
    import tkinter as tk
    from tkinter import messagebox
    HAS_TK = True
except ImportError:
    HAS_TK = False


def show_critical_error_and_exit(title, message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –æ–∫–Ω–æ —Å –æ—à–∏–±–∫–æ–π –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ."""
    if HAS_TK:
        root = tk.Tk()
        root.withdraw()
        messagebox.showerror(title, message)
        root.destroy()
    else:
        print(f"[FATAL] {title}: {message}")
    sys.exit(1)


def connect_db():
    """–°–æ–∑–¥–∞—ë—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å SQLite. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç conn –∏–ª–∏ None."""
    if not os.path.exists(DB_PATH):
        error_msg = f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {DB_PATH}"
        print(f"[ERROR] {error_msg}")
        show_critical_error_and_exit("–§–∞–π–ª –±–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω", error_msg)
        return None

    try:
        conn = sqlite3.connect(DB_PATH, check_same_thread=False)
        conn.row_factory = sqlite3.Row  # –ß—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –∫–æ–ª–æ–Ω–∫–∞–º –ø–æ –∏–º–µ–Ω–∏
        return conn
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ SQLite: {e}")
        show_critical_error_and_exit("–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±–∞–∑—É: {e}")
        return None


def test_connection():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î."""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    conn = connect_db()
    if conn is not None:
        try:
            conn.execute("SELECT 1 FROM items LIMIT 1;")
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ.")
        except Exception as e:
            print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ 'items' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {e}")
            show_critical_error_and_exit("–ü–æ–≤—Ä–µ–∂–¥—ë–Ω–Ω–∞—è –±–∞–∑–∞", "–§–∞–π–ª –±–∞–∑—ã —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞.")
        finally:
            conn.close()


# ‚ö†Ô∏è –£–±–∏—Ä–∞–µ–º save_to_db –∏ ensure_item_exists
# –ü–æ—Ç–æ–º—É —á—Ç–æ –±–∞–∑–∞ read-only ‚Äî –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ Updater