# utils/tray.py
import pystray
from PIL import Image
import webbrowser,time
import locale
from config import resource_path
from utils.logger import debug_log

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
tray_icon = None
lang = "rus"  # –¢–µ–∫—É—â–∏–π —è–∑—ã–∫: "rus" –∏–ª–∏ "eng"


# –°–ø–∏—Å–æ–∫ —è–∑—ã–∫–æ–≤ –∏ —Ä–µ–≥–∏–æ–Ω–æ–≤ –°–ù–ì
CIS_LANGUAGES = {
    'ru',    # –†—É—Å—Å–∫–∏–π
    'ru_RU', 'ru_UA', 'ru_KZ', 'ru_BY', 'ru_MD',  # –†–æ—Å—Å–∏—è, –£–∫—Ä–∞–∏–Ω–∞, –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω, –ë–µ–ª–∞—Ä—É—Å—å, –ú–æ–ª–¥–æ–≤–∞
    'uk', 'uk_UA',  # –£–∫—Ä–∞–∏–Ω—Å–∫–∏–π
    'be', 'be_BY',  # –ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π
    'kk', 'kk_KZ',  # –ö–∞–∑–∞—Ö—Å–∫–∏–π
    'hy', 'hy_AM',  # –ê—Ä–º—è–Ω—Å–∫–∏–π
    'az', 'az_AZ',  # –ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω—Å–∫–∏–π
    'uz', 'uz_UZ',  # –£–∑–±–µ–∫—Å–∫–∏–π
    'ky', 'ky_KG',  # –ö–∏—Ä–≥–∏–∑—Å–∫–∏–π
    'tg', 'tg_TJ'   # –¢–∞–¥–∂–∏–∫—Å–∫–∏–π
}

# –ü–æ–ø—Ä–æ–±—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —è–∑—ã–∫ —Å–∏—Å—Ç–µ–º—ã
try:
    system_locale = locale.getdefaultlocale()[0]  # –ù–∞–ø—Ä–∏–º–µ—Ä: 'ru_RU', 'en_US'
    if system_locale:
        # –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
        lang_tag = system_locale.lower()
        if lang_tag in CIS_LANGUAGES:
            lang = "rus"
except Exception as e:
    debug_log(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —è–∑—ã–∫ —Å–∏—Å—Ç–µ–º—ã: {e}")
    lang = "eng"  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é

debug_log(f"üåç –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: {'–†—É—Å—Å–∫–∏–π' if lang == 'rus' else 'English'} (–ª–æ–∫–∞–ª—å: {system_locale})")



# –°–ª–æ–≤–∞—Ä—å –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
_ = {
    "rus": {
        "help": "–ü–æ–º–æ—â—å",
        "change_lang": "–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫",
        "donate": "–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç",
        "exit": "–í—ã—Ö–æ–¥",
        "tooltip_title": "üìå L2 Trade Tooltip v1.1.1",
        "help_msg": (
            "üîπ –ó–∞–∂–º–∏—Ç–µ F + –Ω–∞–≤–µ–¥–∏—Ç–µ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç \n"
            "üîπ Ctrl+P ‚Äî –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n"
            "üîπ Ctrl+Q ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã—Ö–æ–¥\n"
            "üîπ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–≤–µ—Ä–Ω—É—Ç–æ –≤ —Ç—Ä–µ–π\n"
        ),
        "lang_set": "–Ø–∑—ã–∫ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ –†—É—Å—Å–∫–∏–π",
        "donate_msg": "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø—Ä–æ–µ–∫—Ç–∞!",
        "tray_title": "L2 Trade Market Analyzer",
    },
    "eng": {
        "help": "Help",
        "change_lang": "Change language",
        "donate": "Support project",
        "exit": "Exit",
        "tooltip_title": "üìå L2 Trade Tooltip v1.1.1",
        "help_msg": (
            "üîπ Press F + hover over items \n"
            "üîπ Ctrl+P ‚Äî reload application\n"
            "üîπ Ctrl+Q ‚Äî exit\n"
            "üîπ The application is minimized to the tray\n"
        ),
        "lang_set": "Language changed to English",
        "donate_msg": "Thank you for supporting the project!",
        "tray_title": "L2 Trade Market Analyzer",
    }
}

# üîó –°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ Patreon, Boosty, PayPal –∏ —Ç.–¥.)
DONATE_URL = "https://www.donationalerts.com/r/atblazer"  # ‚Üê –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ—é —Å—Å—ã–ª–∫—É


def open_donate_link(icon, item):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
    debug_log("üí° –ü—É–Ω–∫—Ç '–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å' –≤—ã–±—Ä–∞–Ω")
    webbrowser.open(DONATE_URL)
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    icon.notify(_[lang]["donate_msg"], "L2 Trade Tooltip")


def toggle_language(icon):
    """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —è–∑—ã–∫ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –º–µ–Ω—é"""
    global lang
    lang = "eng" if lang == "rus" else "rus"
    update_menu(icon)
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ —è–∑—ã–∫–∞
    icon.notify(_[lang]["lang_set"], "Language")


def update_menu(icon):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –º–µ–Ω—é —Å —É—á—ë—Ç–æ–º —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞"""
    icon.menu = pystray.Menu(
        pystray.MenuItem(
            _[lang]["help"],
            lambda icon, item: show_help()
        ),
        pystray.MenuItem(
            _[lang]["change_lang"],
            lambda icon, item: toggle_language(icon)
        ),
        pystray.MenuItem(
            _[lang]["donate"],
            lambda icon, item: open_donate_link(icon, item)
        ),
        pystray.MenuItem(
            _[lang]["exit"],
            lambda icon, item: icon.stop()
        )
    )
    icon.title = _[lang]["tray_title"]
    icon.update_menu()


def create_tray_icon(on_exit_callback):
    global tray_icon
    try:
        icon_path = resource_path("data/img/icon.ico")
        image = Image.open(icon_path)
    except Exception as e:
        debug_log(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∫–æ–Ω–∫—É: {e}")
        image = Image.new('RGB', (16, 16), 'gray')

    menu = pystray.Menu(
        pystray.MenuItem(_[lang]["help"], lambda icon, item: show_help()),
        pystray.MenuItem(_[lang]["change_lang"], lambda icon, item: toggle_language(icon)),
        pystray.MenuItem(_[lang]["donate"], lambda icon, item: open_donate_link(icon, item)),
        pystray.MenuItem(_[lang]["exit"], lambda icon, item: on_exit_callback())
    )

    tray_icon = pystray.Icon(
        name="l2tradebot",
        icon=image,
        title=_[lang]["tray_title"],
        menu=menu
    )

    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ñ–æ–Ω–µ
    tray_icon.run_detached()
    time.sleep(0.1)
    tray_icon.notify(_[lang]["help_msg"], "L2 Trade Tooltip")
    return tray_icon


def show_help():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –ø–æ–º–æ—â–∏"""
    tray_icon.notify(_[lang]["help_msg"], _[lang]["tooltip_title"])
