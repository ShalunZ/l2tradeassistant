# utils/logger.py
import os
import sys
import datetime

LOG_FILE = "log.txt"


def get_log_filename():
    today = datetime.datetime.now().strftime("%Y-%m-%d")
    return f"log_{today}.txt"

LOG_FILE = get_log_filename()

def setup_logger():
    """–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç stdout –∏ stderr –≤ —Ñ–∞–π–ª + —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –ø–æ—Ç–æ–∫–∏"""
    if hasattr(sys, 'frozen'):  # –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω –∏–∑ .exe
        logfile = open(LOG_FILE, 'a', encoding='utf-8')
        
        class Logger:
            def __init__(self, stream, logfile):
                self.stream = stream
                self.logfile = logfile

            def write(self, data):
                if data.strip():
                    timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                    log_entry = f"[{timestamp}] {data}"
                    self.logfile.write(log_entry)
                    self.logfile.flush()
                self.stream.write(data)
                self.stream.flush()

            def flush(self):
                self.stream.flush()
                self.logfile.flush()

        sys.stdout = Logger(sys.stdout, logfile)
        sys.stderr = Logger(sys.stderr, logfile)

        # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ
        print("üü¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ")
        print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")