# utils/logger.py
import os
import sys
import datetime

LOG_FILE = "log.txt"

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –≤—Ä–µ–º–µ–Ω–µ–º
def debug_log(message):
    print(f"[{datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] {message}")

class SafeLogger:
    def __init__(self, stream, logfile):
        self.stream = stream
        self.logfile = logfile

    def write(self, data):
        if data.strip():
            timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            log_entry = f"[{timestamp}] {data}"
            if not log_entry.endswith('\n'):
                log_entry += '\n'
            self.logfile.write(log_entry)
            self.logfile.flush()

        if self.stream is not None:
            self.stream.write(data)
            self.stream.flush()

    def flush(self):
        if self.stream is not None:
            self.stream.flush()
        self.logfile.flush()


def setup_logger():
    """–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç stdout –∏ stderr –≤ —Ñ–∞–π–ª + —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –ø–æ—Ç–æ–∫–∏"""
    if hasattr(sys, 'frozen'):  # –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω –∏–∑ .exe
        try:
            logfile = open(LOG_FILE, 'a', encoding='utf-8')
        except Exception as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å log.txt: {e}")
            logfile = None

        # –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º stdout –∏ stderr
        if logfile:
            sys.stdout = SafeLogger(sys.stdout, logfile)
            sys.stderr = SafeLogger(sys.stderr, logfile)

        debug_log("üü¢ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ")
        debug_log(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")