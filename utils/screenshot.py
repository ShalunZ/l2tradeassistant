# utils/screenshot.py
from mss import mss
import cv2
import numpy as np
from pynput import mouse
import os
from datetime import datetime
from config import resource_path
from utils.logger import debug_log

# –†–∞–∑–º–µ—Ä –æ–±–ª–∞—Å—Ç–∏ –≤–æ–∫—Ä—É–≥ –∫—É—Ä—Å–æ—Ä–∞
AREA_SIZE = 700

# –ü–∞–ø–∫–∞ –¥–ª—è –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
DEBUG_DIR = "debug_screenshots"



def take_screenshot(save_debug=False):
    """
    –î–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç –æ–±–ª–∞—Å—Ç–∏ —Ä–∞–∑–º–µ—Ä–æ–º AREA_SIZE x AREA_SIZE –≤–æ–∫—Ä—É–≥ –∫—É—Ä—Å–æ—Ä–∞ –º—ã—à–∏.
    
    :param save_debug: –ï—Å–ª–∏ True ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏ —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç –≤ debug_screenshots
    :return: –£–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ –≤ 2 —Ä–∞–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (BGR), –ø—Ä–∏–≥–æ–¥–Ω–æ–µ –¥–ª—è OpenCV
    """
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∫—É—Ä—Å–æ—Ä–∞
    mouse_controller = mouse.Controller()
    x, y = mouse_controller.position

    # –ì—Ä–∞–Ω–∏—Ü—ã –æ–±–ª–∞—Å—Ç–∏
    monitor = {
        "left": x - 100,
        "top": y - 70,
        "width": AREA_SIZE,
        "height": AREA_SIZE
    }

    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
    with mss() as sct:
        sct_img = sct.grab(monitor)
        img = np.array(sct_img)  # BGRA
        img_bgr = cv2.cvtColor(img, cv2.COLOR_BGRA2BGR)

        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ 2 —Ä–∞–∑–∞
        img_resized = cv2.resize(
            img_bgr,
            (AREA_SIZE * 2, AREA_SIZE * 2),
            interpolation=cv2.INTER_CUBIC  # –õ—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è
        )

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–∞–ø–∫—É debug, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if save_debug:
            os.makedirs(DEBUG_DIR, exist_ok=True)
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S_%f")
            original_path = os.path.join(DEBUG_DIR, f"screenshot_{timestamp}_original.png")
            resized_path = os.path.join(DEBUG_DIR, f"screenshot_{timestamp}_x2.png")

            cv2.imwrite(original_path, img_bgr)
            cv2.imwrite(resized_path, img_resized)
            debug_log(f"üì∏ –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:\n  {original_path}\n  {resized_path}")

        return img_resized